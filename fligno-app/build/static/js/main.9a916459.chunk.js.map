{"version":3,"sources":["components/Navbar.js","components/Landing.js","components/Login.js","components/UserFunctions.js","components/Register.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Landing","e","preventDefault","localStorage","removeItem","this","props","history","push","loginRegLink","className","to","userLink","href","onClick","logOut","bind","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","usertoken","Component","withRouter","Login","state","email","password","errors","onChange","onSubmit","setState","target","name","value","user","axios","post","headers","then","res","setItem","data","token","console","log","catch","err","login","noValidate","htmlFor","placeholder","Register","first_name","last_name","newUser","register","Profile","get","Authorization","userToken","App","Navbar","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9a916459.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nclass Landing extends Component {\r\n    logOut(e){\r\n        e.preventDefault()\r\n        localStorage.removeItem('usertoken')\r\n        this.props.history.push(`/`)\r\n    }\r\n\r\n    render(){\r\n        const loginRegLink = (\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/register\" className=\"nav-link\">\r\n                        Register\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n        const userLink = (\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile\" className=\"nav-link\">\r\n                        Profile\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/\" onClick={this.logOut.bind(this)} className=\"nav-link\">\r\n                        Logout\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        )\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark rounded\">\r\n                <button className=\"navbar-toggle\" \r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#navbar1\"\r\n                        aria-controls=\"navbar1\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                        >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbar1\"></div>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                {localStorage.usertoken ? userLink : loginRegLink}\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Landing)","import React, {Component} from 'react'\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"jumbotron mt-5\">\r\n                    <div className=\"col-sm-8 mx-auto\">\r\n                        <h1 className=\"text-center\">WELCOME</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing","import React, {Component} from 'react'\r\nimport {login} from './UserFunctions'\r\n\r\nclass Login extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        login(user).then(res => {\r\n            if(res) {\r\n                this.props.history.push(`/profile`)\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-5 mx-auto\">\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <h1 className=\"h3 mb-3 font-weight-normal\">\r\n                                Please sign\r\n                            </h1>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Emaill Address</label>\r\n                                <input type=\"email\" \r\n                                    className=\"form-control\" \r\n                                    name=\"email\" \r\n                                    placeholder=\"Enter Email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    name=\"password\" \r\n                                    placeholder=\"Enter password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">Sign In</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import axios from 'axios'\r\n\r\nexport const register = newUser => {\r\n    return axios\r\n    .post('api/register', newUser, {\r\n        headers: {'Content-Type': 'application/json'}\r\n    })\r\n    .then(res => {\r\n        console.log(res)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n    .post('api/login', {\r\n        email: user.email, \r\n        password: user.password\r\n    }, {\r\n        headers: {'Content-Type': 'application/json'}\r\n    })\r\n    .then(res => {\r\n        localStorage.setItem('usertoken', res.data.token)\r\n        console.log(res)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const getProfile = () => {\r\n    return axios\r\n    .get('api/profile', {\r\n        headers: { Authorization: `Bearer ${localStorage.userToken}` }\r\n    })\r\n    .then(res => {\r\n        console.log(res)\r\n        return res.data\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}","import React, {Component} from 'react'\r\nimport { register } from './UserFunctions'\r\n\r\nclass Register extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: '',\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n\r\n        const newUser = {\r\n            name: this.state.first_name + ' ' + this.state.last_name,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        register(newUser).then(res => {\r\n                this.props.history.push(`/login`)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-5 mx-auto\">\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <h1 className=\"h3 mb-3 font-weight-normal\">\r\n                                Register\r\n                            </h1>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"first_name\">First Name</label>\r\n                                <input type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"first_name\" \r\n                                    placeholder=\"Enter First Name\"\r\n                                    value={this.state.first_name}\r\n                                    onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"last_name\">Last Name</label>\r\n                                <input type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"last_name\" \r\n                                    placeholder=\"Enter Last Name\"\r\n                                    value={this.state.last_name}\r\n                                    onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Emaill Address</label>\r\n                                <input type=\"email\" \r\n                                    className=\"form-control\" \r\n                                    name=\"email\" \r\n                                    placeholder=\"Enter Email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.onChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    name=\"password\" \r\n                                    placeholder=\"Enter password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">Register</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register","import React, {Component} from 'react'\r\nimport {getProfile} from './UserFunctions'\r\n\r\nclass Profile extends Component {\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            name: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getProfile().then(res => {\r\n            this.setState({\r\n                name: res.user.name,\r\n                email: res.user.email\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"jumbotron mt-5\">\r\n                    <div className=\"col-sm-4 mx-auto\">\r\n                        <h1 className=\"text-center\">PROFILE</h1>\r\n                    </div>\r\n                    <table className=\"table col-md-4 mx-auto\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Name</td>\r\n                                <td>{this.state.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Email</td>\r\n                                <td>{this.state.email}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Profile","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Navbar from './components/Navbar'\nimport Landing from './components/Landing'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Profile from './components/Profile'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar/>\n          <Route exact path=\"/\" Component={Landing} />\n          <div className=\"Container\">\n            <Route exact path=\"/register\" Component={Register} />\n            <Route exact path=\"/login\" Component={Login} />\n            <Route exact path=\"/profile\" Component={Profile} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}